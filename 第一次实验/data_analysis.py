import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

# 从图片中提取的数据（包含所有数字，即使重复）
data = [
    93.88, 93.75, 91.34, 94.53, 93.69, 22.22, 92.84, 93.06, 92.81, 93.78,
    94.59, 91.38, 76.19, 93, 94, 89, 91, 89, 93, 76.75,
    93.88, 93.66, 74.5, 94.81, 82.72, 74.84, 56.94, 94.09, 92.06, 95.06,
    94.41, 90.88, 93.59, 93.75, 94.5, 94.44, 93.16, 93.78, 93.12, 95.09,
    92.81, 92.03, 95.06, 95.16, 93.38, 93.78, 94.25, 93.06, 91.19, 93.53,
    89.47, 94.06, 93.56, 94.25, 94.38, 87.25, 91.56, 94.09, 92.5, 95.16,
    93.84, 93.59, 94.12, 94.5, 94.03, 92.97, 93.72, 94.47, 92, 94.78,
    94.03, 92.94, 92, 94.28, 57.66, 93.03, 93.78, 92.88, 94.91, 93.59,
    92.56, 93.72, 94.41, 93.59, 92.09, 94.03, 92.25, 92, 95.09, 91.91,
    93.75, 93.22, 93.78, 92.44, 94.16, 94.31, 94.62, 93.69, 94.53, 83.25,
    94.28, 93.88, 94.5, 96.22, 96.41, 95.06, 93.41, 92.19, 92.84, 94.19,
    84.34, 93.78, 94.16, 91.34, 93.69, 93.03, 93.12, 84.75, 89.44, 91.62,
    91.06, 92.97, 95.06, 94.88, 92.81, 95.47, 93.19, 94.66, 93.75, 93.84,
    93.03, 94.97, 94.5, 94.56, 94.81, 93.5, 93.69, 91.44, 94.03, 95.34,
    95.34, 93.84, 91.78, 90.69, 91.72, 91.44, 0, 92.38, 94.16, 94.16,
    94.91, 94.25, 93.09, 94.12, 92.28, 92.94, 93.25, 93.09, 95.34, 93.56,
    66.81, 85.84, 95.38, 43.41, 95, 93.16, 92.31, 83.84, 92.78, 93.5,
    91.56, 84.62, 90.53, 92.94, 82.19, 72.38, 92.72, 93.81, 93.25, 82.53,
    57.53, 90, 92.88, 84.41, 91.91, 94.34, 92.59, 77.91, 94.66, 92.69,
    94.25, 94, 68.72, 91.84, 91.94, 91.44, 94.16, 91.69, 93.25, 94.91,
    95.12, 95.06, 94.25, 88.66, 92.97, 83.75, 91.84, 92.66, 85, 93.94,
    82.66, 95.31, 91.38, 92.31, 93.81, 94.34, 93.81, 93.12, 92.5, 83.66,
    92.03, 93.53, 92.47, 84.16, 91.09, 94.44, 83.62, 94.38, 0, 92.66,
    93, 90.62, 92.69, 96.12, 94.44, 92.59, 85.06, 91.75, 95.19, 94.25,
    94.09, 93.31, 92.75, 93.84, 92.59, 95.53, 93.88, 93.31, 92.38, 89.12,
    88.91, 74.31, 93.91, 93.25, 89.59, 90.84, 90.59, 93.34, 74.72, 55.53,
    84.06, 93.47, 88.97, 92.94, 91.84, 93.97, 73.56, 0, 43.88, 92.03,
    69, 79.78, 74.34, 89.41, 0, 81.41, 92.78, 60.56, 84.16, 82.88,
    83.25, 94.81, 94.72, 94.44, 94.59, 95, 93.5, 94.81, 93.22, 91.34,
    95.75, 94.88, 93.5, 94.16, 90.56, 83.84, 92.06, 92.53, 95.09, 94.66,
    93.88, 93.97, 95.19, 93, 93.03, 93.69, 94.09, 88.38, 94.06, 94.16,
    94.22, 94.25, 84.69, 93.03, 0, 92.53, 76.78, 95.81, 95.47, 95.03,
    93.59, 92.28, 93.06, 83.56, 94.53, 94.53, 93.91, 95.38, 94.16, 75.19,
    93.22, 93.5, 94.09, 94.72, 94.72, 93.44, 92.09, 82.62, 94.62, 92.22,
    95.16, 95, 95.19, 95.19, 94.72, 94.25, 95.47, 93.41, 93.75, 93,
    94.62, 94.59, 94.53, 93.44, 92.69, 93.56, 95, 93.88, 94.34, 93.5,
    91.53, 92.84, 95.56, 92.72, 85.31, 93.06, 93.72, 93.06, 77.25, 93.34,
    95, 95.25, 94.91, 93.69, 91.88, 94.16, 92.75, 93.88, 93.81, 93.53,
    96.06, 94.06, 92.94, 93.5, 91.69, 94.78, 92.38, 94.78, 94.44, 93,
    75.97, 93.22, 91.81, 92.75, 81.84, 91.12, 94.97, 94.16, 83.38, 92.03,
    93.69, 93.22, 92.75, 93.88, 93.31, 84.5, 0, 94.16, 93.59, 85.12,
    91.47, 92.84, 66.88, 95.38, 85.41, 95.28, 94.34, 93.03, 92.34, 91.81,
    93.62, 93.97, 94.09, 91.94, 90.69, 73.38, 94.34, 76.16, 85.16, 95.25,
    94.72, 84.69, 89.38, 84.41, 93.97, 77.72, 93.78, 75.84, 73.78, 94.41,
    94.88, 93.25, 94.88, 94.25, 93.62, 93.97, 94.34, 84.12, 92.44, 84.31,
    92.09, 91.94, 93.81, 94.06, 92.47, 93.91, 94.94, 94.56, 93.28, 85.88,
    93.16, 83.88, 84.28, 93.22, 92.19, 84.72, 95, 80.25, 75.09, 94.5,
    83.59, 94.62, 94.06, 85.72, 94.41, 95.03, 91.62, 95.44, 87.88, 92.47,
    93.78, 96.06, 95.62, 94.16, 91.09, 87.56, 94.28, 92.78, 94.16, 92.31,
    94.81, 93.38, 76, 93.22, 93.69, 84.28, 93.34, 95.31, 94.09, 93.62,
    94.59, 92.84, 75.5, 93.81, 93.66, 86.44, 93.25, 94.25, 93.88, 94.31,
    94.41, 94.88, 92.47, 92.66, 94.22, 93.75, 92.19, 92, 65.69, 94.44,
    83.75, 61.78, 15.75, 90.62, 93.19, 89.94, 93.4, 94.03, 93.78, 94.72,
    92.47, 93.69, 66.03, 91.5, 92.12, 93.69, 94.69, 84.69, 94.22, 93.97,
    71.69, 89.19, 71.53, 93.31, 93.34, 66.41, 91.91, 86.16, 92.09, 94.53,
    93.69, 95.28, 90.69, 93.88, 93.78, 92.84, 94.59, 93.19, 95.25, 91.22,
    94.59, 91.16, 93.69, 93.03, 91.16, 83.81, 93.62, 71.62, 93.31, 92.28,
    48.78, 86.38, 83.88, 92.28, 92.75, 85.22, 93.47, 84.38, 93.44, 94.06,
    93.19, 92.28, 92.31, 92.06, 94.38, 95.06, 93.69, 93.81, 91.66, 92.34,
    92.84, 92.47, 91.62, 90.66, 93.78, 93.12, 94.09, 60.66, 93.59, 91.44,
    93.22, 82.09, 65.59, 93.09, 94.88, 94.81, 84.59, 83.5, 93.53, 90.12,
    93.75, 93.03, 94.06, 95.31, 95.75, 84.97, 75.62, 84.72, 58.41, 94.34,
    94.31, 95, 92.25, 93.38, 94.25, 84.22, 92.41, 91.81, 94.16, 70.22,
    94.16, 69.94, 91.91, 89.62, 82.59, 93.41, 94, 93.12, 93.62, 92.41,
    94.47, 82.06, 93.28, 92.88, 90.34, 76.03, 89.72, 0, 81, 0,
    94.25, 93.03, 31.81, 88.22, 89.28, 86.53, 94.62, 94.06, 93.59, 94.81,
    93.5, 94.53, 94.44, 94.81, 94.06, 93.78, 92.09, 92.75, 91.91, 93.03,
    93.59, 90.59, 93.03, 93.22, 94.81, 94.25, 93.03, 95, 93.88, 95.09,
    91.91, 92.91, 90.69, 92.44, 0, 85.06, 93.22, 95.09, 93.22, 92.38,
    93.03, 93.31, 93.59, 83.28, 91.34, 77.69, 63, 94.25, 94.06, 93.78,
    90.59, 91.44, 81.97, 84.31, 90.69, 89.38, 89.75, 49.72, 91.91, 0,
    91.91, 92.75, 92.38, 93.69, 92.38, 93.78, 93.5, 72.88, 93.81, 95,
    90.78, 91.75, 91.34, 93.66, 93.78, 94.53, 93.5, 93.31, 93.97, 94.72,
    91.97, 95.38, 93.59, 92.47, 95.38, 92.78, 90.5, 93.22, 93.38, 92.75,
    92.56, 85.97, 92.28, 94.06, 94.91, 92.09, 92.47, 94.44, 92.84, 95,
    92.72, 93.22, 92.38, 92.47, 83.94, 91.62, 93.31, 92.75, 94.06, 92.94,
    93.12, 94.25, 90.22, 92.28, 93.31, 90.78, 93.88, 90.97, 89.66, 90.818,
    92.455, 91.364, 89.273, 88.091, 8.364, 90.364, 90.364, 89.364, 88.636, 87.818,
    79.273, 90.091, 76.182, 76.455, 91.727, 82.091, 91.727, 92.273, 89, 91.545,
    88.091, 7, 87, 8.5, 89.2, 92.273, 92.182, 92, 41.636, 87.182,
    86.818, 87, 89.545, 92.909, 90.091, 90, 89.909, 92.636, 90.727, 92.727,
    92, 90.727, 90.364, 92.364, 90.545, 90.455, 89.909, 89.455, 89.455, 90.091,
    92.727, 91.364, 90.455, 89.455, 91.636, 91.091, 77.182, 86.182, 91.636, 88.818,
    89.091, 57.364, 90.545, 90.455, 88.545, 71.7, 81, 8.636, 92.273, 91.909,
    91.727, 86.182, 90.818, 89.455, 92.364, 72.455, 87.545, 89.182, 92.636, 90.636,
    83.545, 89.273, 79.091, 85.182, 91.364, 88, 92.182, 86.727, 91.273, 90.455,
    91.091, 87.455, 90.182, 88.273, 87.909, 92.727, 92.455, 86.909, 92.182, 90.818,
    89.182, 88.636, 88.091, 91, 88.909, 88.364, 81.818, 88.455, 83.364, 89.818,
    88.636, 91.455, 90.909, 79.545, 86.818, 8.455, 87.091, 89.273, 85.636, 89.455,
    89.636, 81, 87, 88.182, 88.545, 85.455, 92.364, 88.364, 89.364, 90.545,
    90.364, 77, 81.727, 89.545, 88, 90.091, 91.364, 87.455, 88.455, 16.182,
    90.818, 87.545, 89.727, 84.545, 90.727, 90.636, 90.818, 90.545, 89.455, 88.273,
    89.455, 87.909, 85.909, 89.364, 24.273, 90.455, 89.636, 81.818, 88.818, 94.364,
    89.455, 91.909, 90.182, 24.727, 79.636, 89.545, 85, 86.182, 93.091, 84.909,
    89.909, 91.636, 91.364, 91.909, 87.273, 89.455, 86.727, 87.636, 83.182, 49.091,
    87.364, 79.273, 87.455, 90.455, 89.091, 87.727, 62.364, 92.545, 85, 88.091,
    86.455, 88.273, 89.273, 89, 89.364, 90.182, 90.909, 89.818, 91.909, 90.364,
    91.455, 92.273, 88.909, 89.455, 89.455, 91.727, 89.091, 91.273, 90.091, 81.636,
    72.273, 93.545, 90.455, 91.455, 79.909, 92.273, 90.818, 91.545, 91.909, 90.636,
    92.727, 92.182, 56.455, 89.182, 81.545, 92, 90.636, 90.818, 88.273, 90.455,
    88.818, 91.909, 87.727, 89.818, 64, 89.545, 49.182, 90.545, 87.364, 90.364,
    88.909, 89.182, 91.636, 89.818, 90.545, 89.455, 78.909, 92.455, 81.273, 92,
    89.273, 91.545, 89.273, 91.727, 92.545, 90.545, 83.455, 92.455, 92.364, 92.636,
    92, 92.182, 91, 90.818, 0, 58.5, 0, 8.545, 8.545, 44.455,
    92.545, 91.909, 91.545, 87.091, 88.636, 91.091, 93, 87.455, 88.636, 92.182,
    88.364, 92.182, 90.545, 91.636, 87.364, 89.455, 91, 92.727, 88.909, 89.364,
    91.273, 0, 91.182, 93.091, 93.364, 92, 92.182, 91.909, 90.636, 92.091,
    90.364, 91.545, 92.727, 91.455, 91, 91.273, 90.455, 93.091, 89.727, 92.273,
    93.273, 91.364, 90, 92.545, 91.091, 91.636, 90.727, 93, 91, 90.455,
    84.818, 85.818, 91.273, 91.545, 91.182, 91.455, 80.455, 80.545, 91.091, 89.273,
    90.364, 91.091, 0, 89.818, 89.818, 91.091, 55.818, 92.636, 90.364, 82.364,
    90.545, 22.727, 0, 8.636, 80.727, 88.909, 89.636, 92, 92.273, 90.636,
    91.273, 93.091, 91.182, 91.818, 92, 87.545, 93, 89.091, 91.455, 94,
    92.182, 94.455, 93.182, 89.364, 90, 87.818, 92.091, 71.818, 91.636, 92.273,
    85.273, 90.636, 91.364, 88.727, 92.727, 91.727, 90.273, 91.636, 93.182, 91.909,
    92.545, 87.727, 89.364, 93.182, 83.455, 89.909, 91.636, 90.636, 89.909, 86.273,
    94, 91.364, 90.545, 91.818, 91.545, 89, 89.182, 76.636, 91.727, 89.364,
    93.818, 90.364, 83.273, 85, 88.273, 92.182, 92.727, 93.545, 92.909, 89.455,
    86.818, 88.091, 87.727, 90.091, 93.273, 90.636, 88.818, 83.182, 89.182, 91.727,
    89.091, 89.364, 87, 92.273, 90.455, 91.273, 91.727, 92.636, 90.636, 92.818,
    92.364, 89.545, 91.727, 91.636, 90.636, 88, 85.5, 93.091, 89.818, 92.909,
    90.727, 82.545, 90.364, 91.727, 86.3, 89.8, 91.273, 91.091, 90.909, 93.545,
    90.818, 91.545, 91.636, 80.818, 89.545, 91.909, 90.818, 90.364, 91.818, 91.182,
    90.545, 88.636, 89.636, 91.182, 91.455, 93.273, 82.818, 93.182, 90.364, 90.364,
    92.636, 91, 91.909, 89.727, 89.909, 92.273, 8.636, 79.909, 91.364, 8.273,
    92.273, 79.455, 90.364, 90.091, 90.818, 90.273, 39.909, 90.273, 89.455, 91.545,
    92.909, 88.364, 91.545, 89.909, 8.455, 90.273, 92.091, 88.545, 89.455, 86.091,
    89.818, 40, 91.091, 89.455, 91.273, 91.455, 91.455, 70.182, 70.273, 88.818,
    91.818, 90.545, 90, 89.182, 93.818, 92.909, 87.455, 79.636, 92.727, 88.273,
    92.091, 84.455, 89.909, 87.909, 91.455, 92.818, 90.545, 90.091, 90, 90.636,
    88.182, 91.273, 71.545, 93.455, 92.091, 77.182, 89.727, 87.364, 89.909, 90.909,
    89.818, 8.364, 82, 57.909, 80.818, 90.636, 91.818, 90.545, 89.364, 88.818,
    90.818, 89, 88.455, 90.545, 91.455, 8.182, 90.727, 8.273, 79.273, 87.818,
    89.727, 71.636, 91.727, 88.727, 89.182, 80.182, 89.727, 8.636, 40.091, 90.727,
    90.091, 88.545, 89.182, 90, 79.636, 90.273, 86.727, 93, 72.727, 91.455,
    90.545, 92.636, 90.818, 87.455, 88.727, 90.364, 83.727, 90.727, 90.273, 83.636,
    90.455, 92.091, 90.091, 92.727, 90, 87.909, 89.909, 75, 90.182, 89.364,
    91.818, 90.091, 89, 8.455, 91.182, 91.727, 90, 89.545, 89.818, 90,
    87.182, 89, 89.636, 87.818, 92.273, 93.636, 91.091, 88.545, 92.909, 91.909,
    90.636, 90.091, 80.727, 90.455, 90.455, 87.091, 90.909, 93.455, 88, 88.091,
    91.273, 90.091, 89, 91.091, 8.273, 89.091, 88, 89.909, 69.273, 98,
    95, 76, 0, 70, 73, 43, 83, 0, 0, 0,
    0, 47, 53, 75, 80, 64, 0, 60, 0, 0,
    43, 48, 98, 100, 93, 40, 80, 95, 88, 95,
    80, 60, 0, 93, 0, 90, 10, 95, 95, 85,
    80, 88, 0, 0
]

# 设置中文字体
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号

# 转换为numpy数组以便计算
data_array = np.array(data)

# 计算统计量
mean = np.mean(data_array)  # 平均值
std_error = stats.sem(data_array)  # 标准误差
median = np.median(data_array)  # 中位数

# 处理众数 - 兼容新旧SciPy版本
try:
    # 新版本SciPy
    mode_result = stats.mode(data_array, keepdims=False)
    mode = mode_result.mode
    mode_count = mode_result.count
except TypeError:
    # 旧版本SciPy
    mode_result = stats.mode(data_array)
    mode = mode_result.mode[0]
    mode_count = mode_result.count[0]

std_dev = np.std(data_array)  # 标准差
variance = np.var(data_array)  # 方差
kurtosis = stats.kurtosis(data_array)  # 峰度
skewness = stats.skew(data_array)  # 偏度
data_range = np.max(data_array) - np.min(data_array)  # 区域（范围）
min_val = np.min(data_array)  # 最小值
max_val = np.max(data_array)  # 最大值
count = len(data_array)  # 观测数
total_sum = np.sum(data_array)  # 求和

# 计算各区间的数据数量
range_0_20 = np.sum((data_array >= 0) & (data_array < 20))
range_20_40 = np.sum((data_array >= 20) & (data_array < 40))
range_40_60 = np.sum((data_array >= 40) & (data_array < 60))
range_60_80 = np.sum((data_array >= 60) & (data_array < 80))
range_80_100 = np.sum((data_array >= 80) & (data_array <= 100))

# 输出结果
print(f"平均值: {mean:.4f}")
print(f"标准误差: {std_error:.4f}")
print(f"中位数: {median:.4f}")
print(f"众数: {mode:.4f}（出现次数: {mode_count}）")
print(f"标准差: {std_dev:.4f}")
print(f"方差: {variance:.4f}")
print(f"峰度: {kurtosis:.4f}")
print(f"偏度: {skewness:.4f}")
print(f"区域（范围）: {data_range:.4f}")
print(f"最小值: {min_val:.4f}")
print(f"最大值: {max_val:.4f}")
print(f"观测数: {count}")
print(f"求和: {total_sum:.4f}")
print("\n各区间数据数量:")
print(f"0-20范围内的数据数量: {range_0_20}")
print(f"20-40范围内的数据数量: {range_20_40}")
print(f"40-60范围内的数据数量: {range_40_60}")
print(f"60-80范围内的数据数量: {range_60_80}")
print(f"80-100范围内的数据数量: {range_80_100}")

# 绘制饼图 - 展示各区间数据分布
plt.figure(figsize=(10, 6))
labels = ['0-20', '20-40', '40-60', '60-80', '80-100']
sizes = [range_0_20, range_20_40, range_40_60, range_60_80, range_80_100]
explode = (0.1, 0, 0, 0, 0)  # 突出第一个区间
colors = ['#FF9999', '#66B2FF', '#99FF99', '#FFCC99', '#FFFF99']

plt.subplot(1, 2, 1)
plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90, shadow=True)
plt.axis('equal')  # 保持圆形
plt.title('各区间数据分布饼图')

# 绘制条形图 - 展示各区间数据数量
plt.subplot(1, 2, 2)
bars = plt.bar(labels, sizes, color=colors)
plt.title('各区间数据数量条形图')
plt.xlabel('数值区间')
plt.ylabel('数量')

# 在条形上方显示具体数值
for bar in bars:
    height = bar.get_height()
    plt.annotate(f'{height}',
                xy=(bar.get_x() + bar.get_width() / 2, height),
                xytext=(0, 3),  # 3点文字偏移
                textcoords="offset points",
                ha='center', va='bottom')

plt.tight_layout()
plt.savefig('data_distribution.png', dpi=300)
plt.show()

# 绘制所有统计量条形图
plt.figure(figsize=(15, 8))

# 所有统计量数据
stat_labels = ['平均值', '标准误差', '中位数', '众数', '标准差', '方差', '峰度', '偏度', '区域(范围)', '最小值', '最大值']
stat_values = [mean, std_error, median, mode, std_dev, variance, kurtosis, skewness, data_range, min_val, max_val]

# 创建两个子图，一个用于方差（数值较大），一个用于其他统计量
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 8), gridspec_kw={'width_ratios': [4, 1]})

# 方差以外的统计量
other_labels = ['平均值', '标准误差', '中位数', '众数', '标准差', '峰度', '偏度', '区域(范围)', '最小值', '最大值']
other_values = [mean, std_error, median, mode, std_dev, kurtosis, skewness, data_range, min_val, max_val]
colors1 = ['#66B2FF', '#99FF99', '#FFCC99', '#FFFF99', '#FF9999', '#FF99FF', '#9999FF', '#CCCC99', '#99CCCC', '#CC99CC']

# 绘制方差以外的统计量
bars1 = ax1.bar(other_labels, other_values, color=colors1)
ax1.set_title('主要统计量（方差除外）')
ax1.set_ylabel('数值')
ax1.tick_params(axis='x', rotation=45)

# 添加数值标签
for bar in bars1:
    height = bar.get_height()
    ax1.annotate(f'{height:.4f}',
                xy=(bar.get_x() + bar.get_width() / 2, height),
                xytext=(0, 3),
                textcoords="offset points",
                ha='center', va='bottom')

# 绘制方差
bars2 = ax2.bar(['方差'], [variance], color='#FF0000')
ax2.set_title('方差')
ax2.set_ylabel('数值')

# 添加方差数值标签
for bar in bars2:
    height = bar.get_height()
    ax2.annotate(f'{height:.4f}',
                xy=(bar.get_x() + bar.get_width() / 2, height),
                xytext=(0, 3),
                textcoords="offset points",
                ha='center', va='bottom')

plt.tight_layout()
plt.savefig('statistics.png', dpi=300)
plt.show()

# 添加观测数和总和的表格图
plt.figure(figsize=(6, 4))
table_data = [
    ['观测数', f'{count}'],
    ['总和', f'{total_sum:.4f}']
]
plt.axis('off')
plt.table(cellText=table_data, colWidths=[0.3, 0.5], loc='center', cellLoc='center')
plt.title('观测数和总和')
plt.tight_layout()
plt.savefig('count_sum.png', dpi=300)
plt.show() 